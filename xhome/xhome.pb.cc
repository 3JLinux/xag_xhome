// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xhome.proto

#include "xhome.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_xhome_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Conditions_xhome_2eproto;
namespace xhome {
class ConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Conditions> _instance;
} _Conditions_default_instance_;
class MissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mission> _instance;
} _Mission_default_instance_;
}  // namespace xhome
static void InitDefaultsConditions_xhome_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xhome::_Conditions_default_instance_;
    new (ptr) ::xhome::Conditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xhome::Conditions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Conditions_xhome_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConditions_xhome_2eproto}, {}};

static void InitDefaultsMission_xhome_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xhome::_Mission_default_instance_;
    new (ptr) ::xhome::Mission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xhome::Mission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Mission_xhome_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMission_xhome_2eproto}, {
      &scc_info_Conditions_xhome_2eproto.base,}};

void InitDefaults_xhome_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Conditions_xhome_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mission_xhome_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_xhome_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_xhome_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_xhome_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_xhome_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, key_),
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, max_),
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, min_),
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, text_),
  PROTOBUF_FIELD_OFFSET(::xhome::Conditions, unit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, version_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, mission_type_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, mission_source_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, mission_id_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, mission_timeout_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, file_name_length_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, file_name_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, field_name_length_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, field_name_),
  PROTOBUF_FIELD_OFFSET(::xhome::Mission, conditions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xhome::Conditions)},
  { 10, -1, sizeof(::xhome::Mission)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xhome::_Conditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xhome::_Mission_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_xhome_2eproto = {
  {}, AddDescriptors_xhome_2eproto, "xhome.proto", schemas,
  file_default_instances, TableStruct_xhome_2eproto::offsets,
  file_level_metadata_xhome_2eproto, 2, file_level_enum_descriptors_xhome_2eproto, file_level_service_descriptors_xhome_2eproto,
};

const char descriptor_table_protodef_xhome_2eproto[] =
  "\n\013xhome.proto\022\005xhome\"O\n\nConditions\022\013\n\003ke"
  "y\030\001 \001(\t\022\013\n\003max\030\002 \001(\002\022\013\n\003min\030\003 \001(\002\022\014\n\004tex"
  "t\030\004 \001(\t\022\014\n\004unit\030\005 \001(\t\"\370\001\n\007Mission\022\017\n\007ver"
  "sion\030\001 \001(\005\022\024\n\014mission_type\030\002 \001(\005\022\026\n\016miss"
  "ion_source\030\003 \001(\005\022\022\n\nmission_id\030\004 \001(\014\022\027\n\017"
  "mission_timeout\030\005 \001(\005\022\030\n\020file_name_lengt"
  "h\030\006 \001(\005\022\021\n\tfile_name\030\007 \001(\014\022\031\n\021field_name"
  "_length\030\010 \001(\005\022\022\n\nfield_name\030\t \001(\014\022%\n\ncon"
  "ditions\030\n \003(\0132\021.xhome.Conditionsb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_xhome_2eproto = {
  false, InitDefaults_xhome_2eproto, 
  descriptor_table_protodef_xhome_2eproto,
  "xhome.proto", &assign_descriptors_table_xhome_2eproto, 360,
};

void AddDescriptors_xhome_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_xhome_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_xhome_2eproto = []() { AddDescriptors_xhome_2eproto(); return true; }();
namespace xhome {

// ===================================================================

void Conditions::InitAsDefaultInstance() {
}
class Conditions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Conditions::kKeyFieldNumber;
const int Conditions::kMaxFieldNumber;
const int Conditions::kMinFieldNumber;
const int Conditions::kTextFieldNumber;
const int Conditions::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Conditions::Conditions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xhome.Conditions)
}
Conditions::Conditions(const Conditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit().size() > 0) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  ::memcpy(&max_, &from.max_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_) -
    reinterpret_cast<char*>(&max_)) + sizeof(min_));
  // @@protoc_insertion_point(copy_constructor:xhome.Conditions)
}

void Conditions::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Conditions_xhome_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&max_)) + sizeof(min_));
}

Conditions::~Conditions() {
  // @@protoc_insertion_point(destructor:xhome.Conditions)
  SharedDtor();
}

void Conditions::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Conditions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Conditions& Conditions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Conditions_xhome_2eproto.base);
  return *internal_default_instance();
}


void Conditions::Clear() {
// @@protoc_insertion_point(message_clear_start:xhome.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&max_)) + sizeof(min_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Conditions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Conditions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("xhome.Conditions.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float max = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_max(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float min = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_min(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // string text = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("xhome.Conditions.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string unit = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("xhome.Conditions.unit");
        object = msg->mutable_unit();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Conditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xhome.Conditions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xhome.Conditions.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float min = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xhome.Conditions.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), static_cast<int>(this->unit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "xhome.Conditions.unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xhome.Conditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xhome.Conditions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Conditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xhome.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // float max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max(), output);
  }

  // float min = 3;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->min(), output);
  }

  // string text = 4;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->unit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xhome.Conditions)
}

::google::protobuf::uint8* Conditions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xhome.Conditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // float max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max(), target);
  }

  // float min = 3;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->min(), target);
  }

  // string text = 4;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "xhome.Conditions.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->unit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xhome.Conditions)
  return target;
}

size_t Conditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xhome.Conditions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string text = 4;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  // float max = 2;
  if (this->max() != 0) {
    total_size += 1 + 4;
  }

  // float min = 3;
  if (this->min() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xhome.Conditions)
  GOOGLE_DCHECK_NE(&from, this);
  const Conditions* source =
      ::google::protobuf::DynamicCastToGenerated<Conditions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xhome.Conditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xhome.Conditions)
    MergeFrom(*source);
  }
}

void Conditions::MergeFrom(const Conditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xhome.Conditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
  if (from.min() != 0) {
    set_min(from.min());
  }
}

void Conditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xhome.Conditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Conditions::CopyFrom(const Conditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xhome.Conditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Conditions::IsInitialized() const {
  return true;
}

void Conditions::Swap(Conditions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Conditions::InternalSwap(Conditions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unit_.Swap(&other->unit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_, other->max_);
  swap(min_, other->min_);
}

::google::protobuf::Metadata Conditions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_xhome_2eproto);
  return ::file_level_metadata_xhome_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Mission::InitAsDefaultInstance() {
}
class Mission::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mission::kVersionFieldNumber;
const int Mission::kMissionTypeFieldNumber;
const int Mission::kMissionSourceFieldNumber;
const int Mission::kMissionIdFieldNumber;
const int Mission::kMissionTimeoutFieldNumber;
const int Mission::kFileNameLengthFieldNumber;
const int Mission::kFileNameFieldNumber;
const int Mission::kFieldNameLengthFieldNumber;
const int Mission::kFieldNameFieldNumber;
const int Mission::kConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mission::Mission()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xhome.Mission)
}
Mission::Mission(const Mission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      conditions_(from.conditions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mission_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mission_id().size() > 0) {
    mission_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mission_id_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_name().size() > 0) {
    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&field_name_length_) -
    reinterpret_cast<char*>(&version_)) + sizeof(field_name_length_));
  // @@protoc_insertion_point(copy_constructor:xhome.Mission)
}

void Mission::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Mission_xhome_2eproto.base);
  mission_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_name_length_) -
      reinterpret_cast<char*>(&version_)) + sizeof(field_name_length_));
}

Mission::~Mission() {
  // @@protoc_insertion_point(destructor:xhome.Mission)
  SharedDtor();
}

void Mission::SharedDtor() {
  mission_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mission& Mission::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Mission_xhome_2eproto.base);
  return *internal_default_instance();
}


void Mission::Clear() {
// @@protoc_insertion_point(message_clear_start:xhome.Mission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conditions_.Clear();
  mission_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_name_length_) -
      reinterpret_cast<char*>(&version_)) + sizeof(field_name_length_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Mission::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Mission*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 mission_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_mission_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 mission_source = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_mission_source(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes mission_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mission_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 mission_timeout = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_mission_timeout(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 file_name_length = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_file_name_length(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes file_name = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 field_name_length = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_field_name_length(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes field_name = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_field_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .xhome.Conditions conditions = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::xhome::Conditions::_InternalParse;
          object = msg->add_conditions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Mission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xhome.Mission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mission_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mission_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mission_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mission_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mission_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mission_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mission_timeout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mission_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 file_name_length = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &file_name_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes file_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 field_name_length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_name_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes field_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_field_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .xhome.Conditions conditions = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xhome.Mission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xhome.Mission)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Mission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xhome.Mission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // int32 mission_type = 2;
  if (this->mission_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mission_type(), output);
  }

  // int32 mission_source = 3;
  if (this->mission_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mission_source(), output);
  }

  // bytes mission_id = 4;
  if (this->mission_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->mission_id(), output);
  }

  // int32 mission_timeout = 5;
  if (this->mission_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mission_timeout(), output);
  }

  // int32 file_name_length = 6;
  if (this->file_name_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->file_name_length(), output);
  }

  // bytes file_name = 7;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->file_name(), output);
  }

  // int32 field_name_length = 8;
  if (this->field_name_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->field_name_length(), output);
  }

  // bytes field_name = 9;
  if (this->field_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->field_name(), output);
  }

  // repeated .xhome.Conditions conditions = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->conditions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xhome.Mission)
}

::google::protobuf::uint8* Mission::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xhome.Mission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // int32 mission_type = 2;
  if (this->mission_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mission_type(), target);
  }

  // int32 mission_source = 3;
  if (this->mission_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mission_source(), target);
  }

  // bytes mission_id = 4;
  if (this->mission_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->mission_id(), target);
  }

  // int32 mission_timeout = 5;
  if (this->mission_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mission_timeout(), target);
  }

  // int32 file_name_length = 6;
  if (this->file_name_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->file_name_length(), target);
  }

  // bytes file_name = 7;
  if (this->file_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->file_name(), target);
  }

  // int32 field_name_length = 8;
  if (this->field_name_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->field_name_length(), target);
  }

  // bytes field_name = 9;
  if (this->field_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->field_name(), target);
  }

  // repeated .xhome.Conditions conditions = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->conditions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xhome.Mission)
  return target;
}

size_t Mission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xhome.Mission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xhome.Conditions conditions = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  // bytes mission_id = 4;
  if (this->mission_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mission_id());
  }

  // bytes file_name = 7;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_name());
  }

  // bytes field_name = 9;
  if (this->field_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->field_name());
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  // int32 mission_type = 2;
  if (this->mission_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mission_type());
  }

  // int32 mission_source = 3;
  if (this->mission_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mission_source());
  }

  // int32 mission_timeout = 5;
  if (this->mission_timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mission_timeout());
  }

  // int32 file_name_length = 6;
  if (this->file_name_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->file_name_length());
  }

  // int32 field_name_length = 8;
  if (this->field_name_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field_name_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xhome.Mission)
  GOOGLE_DCHECK_NE(&from, this);
  const Mission* source =
      ::google::protobuf::DynamicCastToGenerated<Mission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xhome.Mission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xhome.Mission)
    MergeFrom(*source);
  }
}

void Mission::MergeFrom(const Mission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xhome.Mission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conditions_.MergeFrom(from.conditions_);
  if (from.mission_id().size() > 0) {

    mission_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mission_id_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.field_name().size() > 0) {

    field_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_name_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.mission_type() != 0) {
    set_mission_type(from.mission_type());
  }
  if (from.mission_source() != 0) {
    set_mission_source(from.mission_source());
  }
  if (from.mission_timeout() != 0) {
    set_mission_timeout(from.mission_timeout());
  }
  if (from.file_name_length() != 0) {
    set_file_name_length(from.file_name_length());
  }
  if (from.field_name_length() != 0) {
    set_field_name_length(from.field_name_length());
  }
}

void Mission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xhome.Mission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mission::CopyFrom(const Mission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xhome.Mission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mission::IsInitialized() const {
  return true;
}

void Mission::Swap(Mission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mission::InternalSwap(Mission* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&conditions_)->InternalSwap(CastToBase(&other->conditions_));
  mission_id_.Swap(&other->mission_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  field_name_.Swap(&other->field_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(mission_type_, other->mission_type_);
  swap(mission_source_, other->mission_source_);
  swap(mission_timeout_, other->mission_timeout_);
  swap(file_name_length_, other->file_name_length_);
  swap(field_name_length_, other->field_name_length_);
}

::google::protobuf::Metadata Mission::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_xhome_2eproto);
  return ::file_level_metadata_xhome_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace xhome
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::xhome::Conditions* Arena::CreateMaybeMessage< ::xhome::Conditions >(Arena* arena) {
  return Arena::CreateInternal< ::xhome::Conditions >(arena);
}
template<> PROTOBUF_NOINLINE ::xhome::Mission* Arena::CreateMaybeMessage< ::xhome::Mission >(Arena* arena) {
  return Arena::CreateInternal< ::xhome::Mission >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

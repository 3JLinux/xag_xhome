// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: topology_change.proto

#ifndef PROTOBUF_INCLUDED_topology_5fchange_2eproto
#define PROTOBUF_INCLUDED_topology_5fchange_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "role_attributes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_topology_5fchange_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_topology_5fchange_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_topology_5fchange_2eproto();
namespace xag_nav {
namespace os {
namespace proto {
class ChangeMsg;
class ChangeMsgDefaultTypeInternal;
extern ChangeMsgDefaultTypeInternal _ChangeMsg_default_instance_;
}  // namespace proto
}  // namespace os
}  // namespace xag_nav
namespace google {
namespace protobuf {
template<> ::xag_nav::os::proto::ChangeMsg* Arena::CreateMaybeMessage<::xag_nav::os::proto::ChangeMsg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xag_nav {
namespace os {
namespace proto {

enum OperateType {
  OPT_JOIN = 1,
  OPT_LEAVE = 2
};
bool OperateType_IsValid(int value);
const OperateType OperateType_MIN = OPT_JOIN;
const OperateType OperateType_MAX = OPT_LEAVE;
const int OperateType_ARRAYSIZE = OperateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperateType_descriptor();
inline const ::std::string& OperateType_Name(OperateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperateType_descriptor(), value);
}
inline bool OperateType_Parse(
    const ::std::string& name, OperateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperateType>(
    OperateType_descriptor(), name, value);
}
enum RoleType {
  ROLE_PARTICIPANT = 1,
  ROLE_WRITER = 2,
  ROLE_READER = 3
};
bool RoleType_IsValid(int value);
const RoleType RoleType_MIN = ROLE_PARTICIPANT;
const RoleType RoleType_MAX = ROLE_READER;
const int RoleType_ARRAYSIZE = RoleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleType_descriptor();
inline const ::std::string& RoleType_Name(RoleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleType_descriptor(), value);
}
inline bool RoleType_Parse(
    const ::std::string& name, RoleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleType>(
    RoleType_descriptor(), name, value);
}
// ===================================================================

class ChangeMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xag_nav.os.proto.ChangeMsg) */ {
 public:
  ChangeMsg();
  virtual ~ChangeMsg();

  ChangeMsg(const ChangeMsg& from);

  inline ChangeMsg& operator=(const ChangeMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeMsg(ChangeMsg&& from) noexcept
    : ChangeMsg() {
    *this = ::std::move(from);
  }

  inline ChangeMsg& operator=(ChangeMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ChangeMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChangeMsg* internal_default_instance() {
    return reinterpret_cast<const ChangeMsg*>(
               &_ChangeMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ChangeMsg* other);
  friend void swap(ChangeMsg& a, ChangeMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeMsg* New() const final {
    return CreateMaybeMessage<ChangeMsg>(nullptr);
  }

  ChangeMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChangeMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChangeMsg& from);
  void MergeFrom(const ChangeMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChangeMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .xag_nav.os.proto.RoleAttributes role_attr = 3;
  bool has_role_attr() const;
  void clear_role_attr();
  static const int kRoleAttrFieldNumber = 3;
  const ::xag_nav::os::proto::RoleAttributes& role_attr() const;
  ::xag_nav::os::proto::RoleAttributes* release_role_attr();
  ::xag_nav::os::proto::RoleAttributes* mutable_role_attr();
  void set_allocated_role_attr(::xag_nav::os::proto::RoleAttributes* role_attr);

  // optional .xag_nav.os.proto.OperateType operate_type = 1;
  bool has_operate_type() const;
  void clear_operate_type();
  static const int kOperateTypeFieldNumber = 1;
  ::xag_nav::os::proto::OperateType operate_type() const;
  void set_operate_type(::xag_nav::os::proto::OperateType value);

  // optional .xag_nav.os.proto.RoleType role_type = 2;
  bool has_role_type() const;
  void clear_role_type();
  static const int kRoleTypeFieldNumber = 2;
  ::xag_nav::os::proto::RoleType role_type() const;
  void set_role_type(::xag_nav::os::proto::RoleType value);

  // @@protoc_insertion_point(class_scope:xag_nav.os.proto.ChangeMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::xag_nav::os::proto::RoleAttributes* role_attr_;
  int operate_type_;
  int role_type_;
  friend struct ::TableStruct_topology_5fchange_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChangeMsg

// optional .xag_nav.os.proto.OperateType operate_type = 1;
inline bool ChangeMsg::has_operate_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeMsg::clear_operate_type() {
  operate_type_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::xag_nav::os::proto::OperateType ChangeMsg::operate_type() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.ChangeMsg.operate_type)
  return static_cast< ::xag_nav::os::proto::OperateType >(operate_type_);
}
inline void ChangeMsg::set_operate_type(::xag_nav::os::proto::OperateType value) {
  assert(::xag_nav::os::proto::OperateType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  operate_type_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.ChangeMsg.operate_type)
}

// optional .xag_nav.os.proto.RoleType role_type = 2;
inline bool ChangeMsg::has_role_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeMsg::clear_role_type() {
  role_type_ = 1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::xag_nav::os::proto::RoleType ChangeMsg::role_type() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.ChangeMsg.role_type)
  return static_cast< ::xag_nav::os::proto::RoleType >(role_type_);
}
inline void ChangeMsg::set_role_type(::xag_nav::os::proto::RoleType value) {
  assert(::xag_nav::os::proto::RoleType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  role_type_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.ChangeMsg.role_type)
}

// optional .xag_nav.os.proto.RoleAttributes role_attr = 3;
inline bool ChangeMsg::has_role_attr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::xag_nav::os::proto::RoleAttributes& ChangeMsg::role_attr() const {
  const ::xag_nav::os::proto::RoleAttributes* p = role_attr_;
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.ChangeMsg.role_attr)
  return p != nullptr ? *p : *reinterpret_cast<const ::xag_nav::os::proto::RoleAttributes*>(
      &::xag_nav::os::proto::_RoleAttributes_default_instance_);
}
inline ::xag_nav::os::proto::RoleAttributes* ChangeMsg::release_role_attr() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.ChangeMsg.role_attr)
  _has_bits_[0] &= ~0x00000001u;
  ::xag_nav::os::proto::RoleAttributes* temp = role_attr_;
  role_attr_ = nullptr;
  return temp;
}
inline ::xag_nav::os::proto::RoleAttributes* ChangeMsg::mutable_role_attr() {
  _has_bits_[0] |= 0x00000001u;
  if (role_attr_ == nullptr) {
    auto* p = CreateMaybeMessage<::xag_nav::os::proto::RoleAttributes>(GetArenaNoVirtual());
    role_attr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.ChangeMsg.role_attr)
  return role_attr_;
}
inline void ChangeMsg::set_allocated_role_attr(::xag_nav::os::proto::RoleAttributes* role_attr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_attr_);
  }
  if (role_attr) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      role_attr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role_attr, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  role_attr_ = role_attr;
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.ChangeMsg.role_attr)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace os
}  // namespace xag_nav

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xag_nav::os::proto::OperateType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xag_nav::os::proto::OperateType>() {
  return ::xag_nav::os::proto::OperateType_descriptor();
}
template <> struct is_proto_enum< ::xag_nav::os::proto::RoleType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xag_nav::os::proto::RoleType>() {
  return ::xag_nav::os::proto::RoleType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_topology_5fchange_2eproto

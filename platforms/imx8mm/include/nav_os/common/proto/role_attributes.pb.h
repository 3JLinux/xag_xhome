// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_attributes.proto

#ifndef PROTOBUF_INCLUDED_role_5fattributes_2eproto
#define PROTOBUF_INCLUDED_role_5fattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_role_5fattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_role_5fattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_role_5fattributes_2eproto();
namespace xag_nav {
namespace os {
namespace proto {
class RoleAttributes;
class RoleAttributesDefaultTypeInternal;
extern RoleAttributesDefaultTypeInternal _RoleAttributes_default_instance_;
}  // namespace proto
}  // namespace os
}  // namespace xag_nav
namespace google {
namespace protobuf {
template<> ::xag_nav::os::proto::RoleAttributes* Arena::CreateMaybeMessage<::xag_nav::os::proto::RoleAttributes>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xag_nav {
namespace os {
namespace proto {

// ===================================================================

class RoleAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xag_nav.os.proto.RoleAttributes) */ {
 public:
  RoleAttributes();
  virtual ~RoleAttributes();

  RoleAttributes(const RoleAttributes& from);

  inline RoleAttributes& operator=(const RoleAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleAttributes(RoleAttributes&& from) noexcept
    : RoleAttributes() {
    *this = ::std::move(from);
  }

  inline RoleAttributes& operator=(RoleAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RoleAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleAttributes* internal_default_instance() {
    return reinterpret_cast<const RoleAttributes*>(
               &_RoleAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RoleAttributes* other);
  friend void swap(RoleAttributes& a, RoleAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleAttributes* New() const final {
    return CreateMaybeMessage<RoleAttributes>(nullptr);
  }

  RoleAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoleAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoleAttributes& from);
  void MergeFrom(const RoleAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 2;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // optional string message_type = 5;
  bool has_message_type() const;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 5;
  const ::std::string& message_type() const;
  void set_message_type(const ::std::string& value);
  #if LANG_CXX11
  void set_message_type(::std::string&& value);
  #endif
  void set_message_type(const char* value);
  void set_message_type(const char* value, size_t size);
  ::std::string* mutable_message_type();
  ::std::string* release_message_type();
  void set_allocated_message_type(::std::string* message_type);

  // optional bytes proto_desc = 6;
  bool has_proto_desc() const;
  void clear_proto_desc();
  static const int kProtoDescFieldNumber = 6;
  const ::std::string& proto_desc() const;
  void set_proto_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_proto_desc(::std::string&& value);
  #endif
  void set_proto_desc(const char* value);
  void set_proto_desc(const void* value, size_t size);
  ::std::string* mutable_proto_desc();
  ::std::string* release_proto_desc();
  void set_allocated_proto_desc(::std::string* proto_desc);

  // optional string node_name = 7;
  bool has_node_name() const;
  void clear_node_name();
  static const int kNodeNameFieldNumber = 7;
  const ::std::string& node_name() const;
  void set_node_name(const ::std::string& value);
  #if LANG_CXX11
  void set_node_name(::std::string&& value);
  #endif
  void set_node_name(const char* value);
  void set_node_name(const char* value, size_t size);
  ::std::string* mutable_node_name();
  ::std::string* release_node_name();
  void set_allocated_node_name(::std::string* node_name);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 channel_id = 3;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  ::google::protobuf::uint64 channel_id() const;
  void set_channel_id(::google::protobuf::uint64 value);

  // optional uint32 process_id = 4;
  bool has_process_id() const;
  void clear_process_id();
  static const int kProcessIdFieldNumber = 4;
  ::google::protobuf::uint32 process_id() const;
  void set_process_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xag_nav.os.proto.RoleAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::internal::ArenaStringPtr message_type_;
  ::google::protobuf::internal::ArenaStringPtr proto_desc_;
  ::google::protobuf::internal::ArenaStringPtr node_name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint32 process_id_;
  friend struct ::TableStruct_role_5fattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoleAttributes

// required uint64 id = 1;
inline bool RoleAttributes::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleAttributes::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 RoleAttributes::id() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.id)
  return id_;
}
inline void RoleAttributes::set_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  id_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.id)
}

// optional string channel_name = 2;
inline bool RoleAttributes::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleAttributes::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RoleAttributes::channel_name() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.channel_name)
  return channel_name_.GetNoArena();
}
inline void RoleAttributes::set_channel_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.channel_name)
}
#if LANG_CXX11
inline void RoleAttributes::set_channel_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.RoleAttributes.channel_name)
}
#endif
inline void RoleAttributes::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.RoleAttributes.channel_name)
}
inline void RoleAttributes::set_channel_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.RoleAttributes.channel_name)
}
inline ::std::string* RoleAttributes::mutable_channel_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.RoleAttributes.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleAttributes::release_channel_name() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.RoleAttributes.channel_name)
  if (!has_channel_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return channel_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleAttributes::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.RoleAttributes.channel_name)
}

// optional uint64 channel_id = 3;
inline bool RoleAttributes::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleAttributes::clear_channel_id() {
  channel_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 RoleAttributes::channel_id() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.channel_id)
  return channel_id_;
}
inline void RoleAttributes::set_channel_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.channel_id)
}

// optional uint32 process_id = 4;
inline bool RoleAttributes::has_process_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleAttributes::clear_process_id() {
  process_id_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 RoleAttributes::process_id() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.process_id)
  return process_id_;
}
inline void RoleAttributes::set_process_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  process_id_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.process_id)
}

// optional string message_type = 5;
inline bool RoleAttributes::has_message_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleAttributes::clear_message_type() {
  message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RoleAttributes::message_type() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.message_type)
  return message_type_.GetNoArena();
}
inline void RoleAttributes::set_message_type(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.message_type)
}
#if LANG_CXX11
inline void RoleAttributes::set_message_type(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  message_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.RoleAttributes.message_type)
}
#endif
inline void RoleAttributes::set_message_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.RoleAttributes.message_type)
}
inline void RoleAttributes::set_message_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.RoleAttributes.message_type)
}
inline ::std::string* RoleAttributes::mutable_message_type() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.RoleAttributes.message_type)
  return message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleAttributes::release_message_type() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.RoleAttributes.message_type)
  if (!has_message_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return message_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleAttributes::set_allocated_message_type(::std::string* message_type) {
  if (message_type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_type);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.RoleAttributes.message_type)
}

// optional bytes proto_desc = 6;
inline bool RoleAttributes::has_proto_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleAttributes::clear_proto_desc() {
  proto_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& RoleAttributes::proto_desc() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.proto_desc)
  return proto_desc_.GetNoArena();
}
inline void RoleAttributes::set_proto_desc(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.proto_desc)
}
#if LANG_CXX11
inline void RoleAttributes::set_proto_desc(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  proto_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.RoleAttributes.proto_desc)
}
#endif
inline void RoleAttributes::set_proto_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.RoleAttributes.proto_desc)
}
inline void RoleAttributes::set_proto_desc(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  proto_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.RoleAttributes.proto_desc)
}
inline ::std::string* RoleAttributes::mutable_proto_desc() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.RoleAttributes.proto_desc)
  return proto_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleAttributes::release_proto_desc() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.RoleAttributes.proto_desc)
  if (!has_proto_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return proto_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleAttributes::set_allocated_proto_desc(::std::string* proto_desc) {
  if (proto_desc != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  proto_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto_desc);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.RoleAttributes.proto_desc)
}

// optional string node_name = 7;
inline bool RoleAttributes::has_node_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleAttributes::clear_node_name() {
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& RoleAttributes::node_name() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.RoleAttributes.node_name)
  return node_name_.GetNoArena();
}
inline void RoleAttributes::set_node_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.RoleAttributes.node_name)
}
#if LANG_CXX11
inline void RoleAttributes::set_node_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  node_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.RoleAttributes.node_name)
}
#endif
inline void RoleAttributes::set_node_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.RoleAttributes.node_name)
}
inline void RoleAttributes::set_node_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.RoleAttributes.node_name)
}
inline ::std::string* RoleAttributes::mutable_node_name() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.RoleAttributes.node_name)
  return node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleAttributes::release_node_name() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.RoleAttributes.node_name)
  if (!has_node_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return node_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleAttributes::set_allocated_node_name(::std::string* node_name) {
  if (node_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), node_name);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.RoleAttributes.node_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace os
}  // namespace xag_nav

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_role_5fattributes_2eproto

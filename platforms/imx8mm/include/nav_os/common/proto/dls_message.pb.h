// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dls_message.proto

#ifndef PROTOBUF_INCLUDED_dls_5fmessage_2eproto
#define PROTOBUF_INCLUDED_dls_5fmessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dls_5fmessage_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dls_5fmessage_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dls_5fmessage_2eproto();
namespace xag_nav {
namespace os {
namespace proto {
class bundle;
class bundleDefaultTypeInternal;
extern bundleDefaultTypeInternal _bundle_default_instance_;
class fc_command;
class fc_commandDefaultTypeInternal;
extern fc_commandDefaultTypeInternal _fc_command_default_instance_;
class fc_message;
class fc_messageDefaultTypeInternal;
extern fc_messageDefaultTypeInternal _fc_message_default_instance_;
}  // namespace proto
}  // namespace os
}  // namespace xag_nav
namespace google {
namespace protobuf {
template<> ::xag_nav::os::proto::bundle* Arena::CreateMaybeMessage<::xag_nav::os::proto::bundle>(Arena*);
template<> ::xag_nav::os::proto::fc_command* Arena::CreateMaybeMessage<::xag_nav::os::proto::fc_command>(Arena*);
template<> ::xag_nav::os::proto::fc_message* Arena::CreateMaybeMessage<::xag_nav::os::proto::fc_message>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xag_nav {
namespace os {
namespace proto {

// ===================================================================

class fc_message final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xag_nav.os.proto.fc_message) */ {
 public:
  fc_message();
  virtual ~fc_message();

  fc_message(const fc_message& from);

  inline fc_message& operator=(const fc_message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  fc_message(fc_message&& from) noexcept
    : fc_message() {
    *this = ::std::move(from);
  }

  inline fc_message& operator=(fc_message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const fc_message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const fc_message* internal_default_instance() {
    return reinterpret_cast<const fc_message*>(
               &_fc_message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(fc_message* other);
  friend void swap(fc_message& a, fc_message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline fc_message* New() const final {
    return CreateMaybeMessage<fc_message>(nullptr);
  }

  fc_message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<fc_message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const fc_message& from);
  void MergeFrom(const fc_message& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(fc_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required fixed32 from = 1;
  bool has_from() const;
  void clear_from();
  static const int kFromFieldNumber = 1;
  ::google::protobuf::uint32 from() const;
  void set_from(::google::protobuf::uint32 value);

  // required fixed32 to = 2;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 2;
  ::google::protobuf::uint32 to() const;
  void set_to(::google::protobuf::uint32 value);

  // required fixed32 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // required fixed32 version = 4;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xag_nav.os.proto.fc_message)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 from_;
  ::google::protobuf::uint32 to_;
  ::google::protobuf::uint32 length_;
  ::google::protobuf::uint32 version_;
  friend struct ::TableStruct_dls_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class fc_command final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xag_nav.os.proto.fc_command) */ {
 public:
  fc_command();
  virtual ~fc_command();

  fc_command(const fc_command& from);

  inline fc_command& operator=(const fc_command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  fc_command(fc_command&& from) noexcept
    : fc_command() {
    *this = ::std::move(from);
  }

  inline fc_command& operator=(fc_command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const fc_command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const fc_command* internal_default_instance() {
    return reinterpret_cast<const fc_command*>(
               &_fc_command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(fc_command* other);
  friend void swap(fc_command& a, fc_command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline fc_command* New() const final {
    return CreateMaybeMessage<fc_command>(nullptr);
  }

  fc_command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<fc_command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const fc_command& from);
  void MergeFrom(const fc_command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(fc_command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data_ = 2;
  bool has_data_() const;
  void clear_data_();
  static const int kDataFieldNumber = 2;
  const ::std::string& data_() const;
  void set_data_(const ::std::string& value);
  #if LANG_CXX11
  void set_data_(::std::string&& value);
  #endif
  void set_data_(const char* value);
  void set_data_(const void* value, size_t size);
  ::std::string* mutable_data_();
  ::std::string* release_data_();
  void set_allocated_data_(::std::string* data_);

  // required fixed32 command_ = 1;
  bool has_command_() const;
  void clear_command_();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::uint32 command_() const;
  void set_command_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xag_nav.os.proto.fc_command)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data__;
  ::google::protobuf::uint32 command__;
  friend struct ::TableStruct_dls_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class bundle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xag_nav.os.proto.bundle) */ {
 public:
  bundle();
  virtual ~bundle();

  bundle(const bundle& from);

  inline bundle& operator=(const bundle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  bundle(bundle&& from) noexcept
    : bundle() {
    *this = ::std::move(from);
  }

  inline bundle& operator=(bundle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const bundle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const bundle* internal_default_instance() {
    return reinterpret_cast<const bundle*>(
               &_bundle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(bundle* other);
  friend void swap(bundle& a, bundle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline bundle* New() const final {
    return CreateMaybeMessage<bundle>(nullptr);
  }

  bundle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<bundle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const bundle& from);
  void MergeFrom(const bundle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(bundle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .xag_nav.os.proto.fc_message fc_msg_ = 1;
  bool has_fc_msg_() const;
  void clear_fc_msg_();
  static const int kFcMsgFieldNumber = 1;
  const ::xag_nav::os::proto::fc_message& fc_msg_() const;
  ::xag_nav::os::proto::fc_message* release_fc_msg_();
  ::xag_nav::os::proto::fc_message* mutable_fc_msg_();
  void set_allocated_fc_msg_(::xag_nav::os::proto::fc_message* fc_msg_);

  // optional .xag_nav.os.proto.fc_command fc_cmd_ = 2;
  bool has_fc_cmd_() const;
  void clear_fc_cmd_();
  static const int kFcCmdFieldNumber = 2;
  const ::xag_nav::os::proto::fc_command& fc_cmd_() const;
  ::xag_nav::os::proto::fc_command* release_fc_cmd_();
  ::xag_nav::os::proto::fc_command* mutable_fc_cmd_();
  void set_allocated_fc_cmd_(::xag_nav::os::proto::fc_command* fc_cmd_);

  // @@protoc_insertion_point(class_scope:xag_nav.os.proto.bundle)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::xag_nav::os::proto::fc_message* fc_msg__;
  ::xag_nav::os::proto::fc_command* fc_cmd__;
  friend struct ::TableStruct_dls_5fmessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// fc_message

// required fixed32 from = 1;
inline bool fc_message::has_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fc_message::clear_from() {
  from_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 fc_message::from() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_message.from)
  return from_;
}
inline void fc_message::set_from(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  from_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_message.from)
}

// required fixed32 to = 2;
inline bool fc_message::has_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void fc_message::clear_to() {
  to_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 fc_message::to() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_message.to)
  return to_;
}
inline void fc_message::set_to(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  to_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_message.to)
}

// required fixed32 length = 3;
inline bool fc_message::has_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void fc_message::clear_length() {
  length_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 fc_message::length() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_message.length)
  return length_;
}
inline void fc_message::set_length(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  length_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_message.length)
}

// required fixed32 version = 4;
inline bool fc_message::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void fc_message::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 fc_message::version() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_message.version)
  return version_;
}
inline void fc_message::set_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  version_ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_message.version)
}

// required bytes data = 5;
inline bool fc_message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fc_message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& fc_message::data() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_message.data)
  return data_.GetNoArena();
}
inline void fc_message::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_message.data)
}
#if LANG_CXX11
inline void fc_message::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.fc_message.data)
}
#endif
inline void fc_message::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.fc_message.data)
}
inline void fc_message::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.fc_message.data)
}
inline ::std::string* fc_message::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.fc_message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* fc_message::release_data() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.fc_message.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void fc_message::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.fc_message.data)
}

// -------------------------------------------------------------------

// fc_command

// required fixed32 command_ = 1;
inline bool fc_command::has_command_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void fc_command::clear_command_() {
  command__ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 fc_command::command_() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_command.command_)
  return command__;
}
inline void fc_command::set_command_(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  command__ = value;
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_command.command_)
}

// required bytes data_ = 2;
inline bool fc_command::has_data_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fc_command::clear_data_() {
  data__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& fc_command::data_() const {
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.fc_command.data_)
  return data__.GetNoArena();
}
inline void fc_command::set_data_(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xag_nav.os.proto.fc_command.data_)
}
#if LANG_CXX11
inline void fc_command::set_data_(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xag_nav.os.proto.fc_command.data_)
}
#endif
inline void fc_command::set_data_(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xag_nav.os.proto.fc_command.data_)
}
inline void fc_command::set_data_(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xag_nav.os.proto.fc_command.data_)
}
inline ::std::string* fc_command::mutable_data_() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.fc_command.data_)
  return data__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* fc_command::release_data_() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.fc_command.data_)
  if (!has_data_()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data__.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void fc_command::set_allocated_data_(::std::string* data_) {
  if (data_ != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_);
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.fc_command.data_)
}

// -------------------------------------------------------------------

// bundle

// optional .xag_nav.os.proto.fc_message fc_msg_ = 1;
inline bool bundle::has_fc_msg_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void bundle::clear_fc_msg_() {
  if (fc_msg__ != nullptr) fc_msg__->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::xag_nav::os::proto::fc_message& bundle::fc_msg_() const {
  const ::xag_nav::os::proto::fc_message* p = fc_msg__;
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.bundle.fc_msg_)
  return p != nullptr ? *p : *reinterpret_cast<const ::xag_nav::os::proto::fc_message*>(
      &::xag_nav::os::proto::_fc_message_default_instance_);
}
inline ::xag_nav::os::proto::fc_message* bundle::release_fc_msg_() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.bundle.fc_msg_)
  _has_bits_[0] &= ~0x00000001u;
  ::xag_nav::os::proto::fc_message* temp = fc_msg__;
  fc_msg__ = nullptr;
  return temp;
}
inline ::xag_nav::os::proto::fc_message* bundle::mutable_fc_msg_() {
  _has_bits_[0] |= 0x00000001u;
  if (fc_msg__ == nullptr) {
    auto* p = CreateMaybeMessage<::xag_nav::os::proto::fc_message>(GetArenaNoVirtual());
    fc_msg__ = p;
  }
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.bundle.fc_msg_)
  return fc_msg__;
}
inline void bundle::set_allocated_fc_msg_(::xag_nav::os::proto::fc_message* fc_msg_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fc_msg__;
  }
  if (fc_msg_) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fc_msg_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fc_msg_, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fc_msg__ = fc_msg_;
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.bundle.fc_msg_)
}

// optional .xag_nav.os.proto.fc_command fc_cmd_ = 2;
inline bool bundle::has_fc_cmd_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void bundle::clear_fc_cmd_() {
  if (fc_cmd__ != nullptr) fc_cmd__->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::xag_nav::os::proto::fc_command& bundle::fc_cmd_() const {
  const ::xag_nav::os::proto::fc_command* p = fc_cmd__;
  // @@protoc_insertion_point(field_get:xag_nav.os.proto.bundle.fc_cmd_)
  return p != nullptr ? *p : *reinterpret_cast<const ::xag_nav::os::proto::fc_command*>(
      &::xag_nav::os::proto::_fc_command_default_instance_);
}
inline ::xag_nav::os::proto::fc_command* bundle::release_fc_cmd_() {
  // @@protoc_insertion_point(field_release:xag_nav.os.proto.bundle.fc_cmd_)
  _has_bits_[0] &= ~0x00000002u;
  ::xag_nav::os::proto::fc_command* temp = fc_cmd__;
  fc_cmd__ = nullptr;
  return temp;
}
inline ::xag_nav::os::proto::fc_command* bundle::mutable_fc_cmd_() {
  _has_bits_[0] |= 0x00000002u;
  if (fc_cmd__ == nullptr) {
    auto* p = CreateMaybeMessage<::xag_nav::os::proto::fc_command>(GetArenaNoVirtual());
    fc_cmd__ = p;
  }
  // @@protoc_insertion_point(field_mutable:xag_nav.os.proto.bundle.fc_cmd_)
  return fc_cmd__;
}
inline void bundle::set_allocated_fc_cmd_(::xag_nav::os::proto::fc_command* fc_cmd_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fc_cmd__;
  }
  if (fc_cmd_) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fc_cmd_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fc_cmd_, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  fc_cmd__ = fc_cmd_;
  // @@protoc_insertion_point(field_set_allocated:xag_nav.os.proto.bundle.fc_cmd_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace os
}  // namespace xag_nav

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dls_5fmessage_2eproto
